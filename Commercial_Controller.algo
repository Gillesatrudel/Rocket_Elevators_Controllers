    
    
    SEQUENCE Battery (Floor)
        FOR EACH column IN columns
               IF Floor =< 1 THEN
                 CALL CallElevator (Direction, Floor, column)
               IF Floor =< 20 AND >= 1 THEN
                 CALL CallElevator (Direction, Floor, column)
               IF Floor =< 40 AND >= 1 THEN
                 CALL CallElevator (Direction, Floor, column)
               IF Floor =< 60 and >= 1 THEN
                 CALL CallElevator (Direction, Floor, column) 
               END IF
        END FOR
    END SEQUENCE

            

	SEQUENCE CallElevator(Direction, floor, Column)
	
		CALL ActivateButton (Direction, floor, Column)
		CALL FindElevator (Direction, floor, Column) RETURNING Elevator
		CALL RequestElevator (Elevator, floor, Column)
		CALL OperateElevator (Elevator, Column)

	END SEQUENCE
	
	
	SEQUENCE ActivateButton (Direction, floor, Column)
	
		CALL FindButton (Direction, floor, Column) RETURNING Button
		SET  Button Active
	ENDSEQUENCE

    SEQUENCE FindButton(Direction, floor,Column)RETURNING Button
	
		FOR EACH Button IN Buttons
			IF Floor = ButtonFloor AND Direction = ButtonDirection
			THEN RETURN BUTTON
		END FOR
	END SEQUENCE


	SEQUENCE DesactivateButton (ElevatorDirection, floor, Column)
	
		CALL FindActivateButton (ElevatorDirection, floor, Column) RETURNING Button
		SET  ActivateButton Inactive
	ENDSEQUENCE

    SEQUENCE FindActivateButton (ElevatorDirection, Floor, Column)
        FOR EACH ActivateButton IN ActivateButtons
            IF CurrentFloor = ActivateButtonFloor AND Direction = ActivateButtonDirection THEN 
            RETURN ActivateButton
        END FOR
    END SEQUENCE

    SEQUENCE ActivateInsideButton (Elevator, CurrentFloor, Column)
        CALL FindActivateInsideButton (Direction, Floor, Column) RETURNING ActivateInsideButton
        SET ActivateInsideButton Active
    END SEQUENCE

	
    SEQUENCE DesactivateInsideButton (Elevator, CurrentFloor, Column)
        CALL FindActiveInsideButton (Elevator, CurrentFloor, Column) RETURNING Button
        SET ActivateInsideButton Inactive
    END SEQUENCE
	   
    SEQUENCE FindActivateInsideButton (Elevator, CurrentFloor, Column)
        FOR EACH ActivateInsideButton IN ActivateInsideButtons
            IF CurrentFloor = ActivateInsideButtonFloor THEN 
            RETURN ActivateInsideButton
        END FOR
    END SEQUENCE

    	
    SEQUENCE FindElevator (Direction, Floor, Column) 
        WHILE Elevator NOT Found
            FOR EACH Elevator IN Elevators 
                IF Floor = CurrentFloor  AND Status IS Stopped AND ElevatorDirection IS Direction THEN
                    RETURN Elevator
                    ELSE IF Status IS Idle AND Floor = CurrentFloor THEN
                    RETURN Elevator                
                ELSE IF Floor > CurrentFloor AND ElevatorDirection IS GoingUp AND ElevatorDirection IS Direction THEN
                    RETURN Elevator
                ELSE IF ElevatorDirection IS GoingUp AND ElevatorDirection IS Direction AND Floor > CurrentFloor THEN
                    RETURN Elevator
                ELSE IF ElevatorDirection IS GoingDown AND ElevatorDirection IS Direction AND Floor < CurrentFloor THEN
                    RETURN Elevator
                END IF
            END FOR

            READ Elevator WITH Shortest FloorList FROM Elevators
                    RETURN Elevator                
                
        END WHILE
    END SEQUENCE

        

    SEQUENCE OperateElevator (Elevator, Column)
        READ RequestedFloor FROM FloorList
        CALL ActivateInsideButton (Elevator, CurrentFloor, Column)
        IF CurrentFloor IS RequestedFloor THEN 
            CALL OpenDoor (Elevator, Column)
        IF CurrentFloor > RequestedFloor THEN
            CALL MoveDown (Elevator, RequestedFloor, Column)
        IF CurrentFloor < RequestedFloor THEN
            CALL MoveUp (Elevator, RequestedFloor, Column)
        END IF

    END SEQUENCE

    SEQUENCE RequestElevator (Elevator, RequestedFloor, Column)
        ADD RequestedFloor TO FloorList
        CALL SortFloorList (FloorList, Column) RETURNING SortedFloorList
        SET FloorList TO SortedFloorList
    END SEQUENCE

    SEQUENCE SortFloorList (FloorList, Direction, Column)
        SORT FloorList BY Direction THEN RETURN FloorList
    END SEQUENCE

    SEQUENCE OpenDoor (Elevator, Column)
        CALL FindActivateButton (ElevatorDirection, Floor, Column) RETURNING ActivateButton 
        CALL DesactivateInsideButton(Elevator, CurrentFloor, Column) 
        RETURN ActivateButton
        REPEAT 
            OpenDoor 
            INIT Timer TO 5 Seconds 
        UNTIL Door NOT Obstructed         
        CALL CloseDoor (Elevator, Column)
    END SEQUENCE

    SEQUENCE Obstructed (Elevator, Column)
        READ Captor FROM door
        IF Obstructed
            RETURN TRUE
        ELSE RETURN FALSE
    END SEQUENCE


    SEQUENCE Overweight (Elevator, Column)
        READ Weight FROM Balance
        IF Weight > MaxWeight THEN
            RETURN TRUE
        ELSE RETURN FALSE
        END IF
    END SEQUENCE

    SEQUENCE CloseDoor (Elevator, Column)
        WHILE Obstructed OR Overweight
         CALL OpenDoor (Elevator, Column)
        END WHILE
        CALL CloseDoor
        CALL OperateElevator (Elevator, Column)
    END SEQUENCE

    SEQUENCE MoveDown (Elevator, RequestedFloor, Column)
        REPEAT 
            COMPUTE CurrentFloor = Floor - 1
            SHOW CurrentFloor 
        UNTIL CurrentFloor IS Floor
        CALL RequestElevator (Elevator, RequestedFloor, Column)
    END SEQUENCE

    SEQUENCE MoveUp (Elevator, RequestedFloor, Column)
        REPEAT 
            COMPUTE CurrentFloor = Floor + 1
            SHOW CurrentFloor
        UNTIL CurrentFloor IS Floor
        CALL RequestElevator (Elevator, RequestedFloor, Column)
    END SEQUENCE
